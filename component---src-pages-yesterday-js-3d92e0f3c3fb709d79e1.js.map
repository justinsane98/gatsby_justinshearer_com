{"version":3,"sources":["webpack:///./src/components/sec/Admin.js","webpack:///./src/components/sec/Speeches.js","webpack:///./src/components/sec/Header.js","webpack:///./src/pages/yesterday.js","webpack:///./src/components/sec/News.js","webpack:///./src/components/sec/Testimony.js","webpack:///./src/components/sec/Litigation.js","webpack:///./src/components/sec/TradingSuspensions.js","webpack:///./src/components/sec/ProposedRules.js","webpack:///./src/components/sec/Footer.js","webpack:///./src/components/sec/Statements.js"],"names":["Admin","rssUrl","sourceUrl","title","startDate","endDate","data","useStaticQuery","months","feed","allFeedAdmin","nodes","forEach","entry","i","entryDay","pubDate","split","entryMonth","entryYear","entryTime","entryMinute","entryHour","content","replaceAll","entryDate","Date","findIndex","element","includes","setHours","push","className","key","href","link","length","Speeches","allFeedSpeeches","Header","props","Yesterday","today","start","setDate","getDate","getMonth","getFullYear","end","rel","crossOrigin","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","News","allFeedNews","Testimony","allFeedTestimony","Litigation","allFeedLitigation","TradingSuspensions","allFeedTradingSuspensions","ProposedRules","allFeedProposedRules","Footer","Statements","allFeedStatements"],"mappings":"8FAAA,qCAyDeA,IAtDD,SAAC,GAAmD,EAAlDC,OAAkD,EAA1CC,UAA0C,EAA/BC,MAAgC,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAE7CC,EAAOC,yBAAe,aAatBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAwBX,OAvBYH,EAAKI,aAAaC,MAExBC,SAAQ,SAASC,EAAOC,GAC5B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACA,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC/C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,6D,kCCnDJ,qCA2DeC,IAxDE,SAAC,GAA0B,IAAzBjC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAEtBC,EAAOC,yBAAe,aAetBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAwBb,OAvBcH,EAAKgC,gBAAgB3B,MAE3BC,SAAQ,SAASC,EAAOC,GAC9B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACE,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC/C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,0C,oCCrDJ,yBAaeG,IAXf,SAAgBC,GACd,OACE,4BAAQR,UAAU,sCAChB,yBAAKA,UAAU,6FACf,yBAAKA,UAAU,uGACf,yBAAKA,UAAU,uGACf,0BAAMA,UAAU,0FAAhB,iC,kCCRN,wJAmIeS,UAvHG,WAChB,IAAMjC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDkC,EAAQ,IAAIhB,KACZiB,EAAQ,IAAIjB,KAAKgB,GACrBC,EAAMC,QAAQD,EAAME,UAHV,GAIV,IAAIzC,EAAYI,EAAOmC,EAAMG,YAAc,IAAOH,EAAME,UAAa,KAAOF,EAAMI,cAC9EC,EAAM,IAAItB,KAAKgB,GACnBM,EAAIJ,QAAQI,EAAIH,UANN,GAOV,IAAIxC,EAAUG,EAAOwC,EAAIF,YAAc,IAAME,EAAIH,UAAY,KAAOG,EAAID,cAExE,OACE,oCACE,0BAAME,IAAI,aAAaf,KAAK,iCAC5B,0BAAMe,IAAI,aAAaf,KAAK,4BAA4BgB,YAAY,MACpE,0BACEhB,KAAK,8FACLe,IAAI,eAGN,kBAAC,IAAD,MACA,yBAAKjB,UAAU,4CACf,8BACE,wBAAIA,UAAU,kCAAd,wBACA,wBAAIA,UAAU,4BACX5B,IAAcC,EAAUD,EAAaA,EAAY,MAAQC,EAC1D,uBAAG2B,UAAU,kDAAkDE,KAAK,QAClE,yBAAKiB,MAAM,6BAA6BnB,UAAU,UAAUoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACjG,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,oBAI3E,6BAAS1B,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,QACA,kBAAC,IAAD,CAAM5B,UAAWuC,EAAOtC,QAAS2C,IACjC,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,SAAjD,eAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,YACA,kBAAC,IAAD,CAAU5B,UAAWuC,EAAOtC,QAAS2C,IACrC,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,aAAjD,mBAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,aACA,kBAAC,IAAD,CAAW5B,UAAWuC,EAAOtC,QAAS2C,IACtC,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,cAAjD,oBAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,qBACA,kBAAC,IAAD,CAAY5B,UAAWuC,EAAOtC,QAAS2C,IACvC,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,eAAjD,qBAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,cACA,kBAAC,IAAD,CAAY5B,UAAWuC,EAAOtC,QAAS2C,IACvC,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,eAAjD,qBAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,8BACA,kBAAC,IAAD,CAAO5B,UAAWuC,EAAOtC,QAAS2C,IAClC,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,UAAjD,sBAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,uBACA,kBAAC,IAAD,CAAoB5B,UAAWuC,EAAOtC,QAAS2C,IAC/C,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,uBAAjD,sBAIjR,6BAASF,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,kBACA,kBAAC,IAAD,CAAe5B,UAAWuC,EAAOtC,QAAS2C,IAC1C,yBAAKhB,UAAU,0CACb,yBAAKmB,MAAM,6BAA6BnB,UAAU,yCAAyCoB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAAe,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iDADxN,IAC+Q,uBAAG1B,UAAU,+BAA+BE,KAAK,kBAAjD,qBAoBjR,kBAAC,IAAD,U,kCC9HN,qCA0DeyB,IAvDF,SAAC,GAA0B,IAAzBvD,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAElBC,EAAOC,yBAAe,cAetBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDC,EAAO,GAwBb,OAvBcH,EAAKsD,YAAYjD,MAEvBC,SAAQ,SAASC,EAAOC,GAC9B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACE,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC/C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,wC,kCCpDJ,qCA2DeyB,IAxDG,SAAC,GAA0B,IAAzBzD,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAEvBC,EAAOC,yBAAe,cAetBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAwBX,OAvBYH,EAAKwD,iBAAiBnD,MAE5BC,SAAQ,SAASC,EAAOC,GAC5B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACE,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC/C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,6C,kCCrDN,qCAyDe2B,IAtDI,SAAC,GAA0B,IAAzB3D,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAExBC,EAAOC,yBAAe,cAatBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAwBX,OAvBYH,EAAK0D,kBAAkBrD,MAE7BC,SAAQ,SAASC,EAAOC,GAC5B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACA,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC/C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,8C,kCCnDJ,qCAwDe6B,IArDY,SAAC,GAAmD,EAAlDhE,OAAkD,EAA1CC,UAA0C,EAA/BC,MAAgC,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAE1DC,EAAOC,yBAAe,cAYtBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAwBX,OAvBYH,EAAK4D,0BAA0BvD,MAErCC,SAAQ,SAASC,EAAOC,GAC5B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACC,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC9C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,8C,kCClDN,qCAsDe+B,IAnDO,SAAC,GAAmD,EAAlDlE,OAAkD,EAA1CC,UAA0C,EAA/BC,MAAgC,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAErDC,EAAOC,yBAAe,cAYtBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAsBX,OArBYH,EAAK8D,qBAAqBzD,MAEhCC,SAAQ,SAASC,EAAOC,GAC5B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCQ,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACC,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC9C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD,iD,kCChDN,yBAmBeiC,IAjBf,SAAgB7B,GACd,OAEE,yBAAKR,UAAU,uEACX,wBAAIA,UAAU,0BAAd,wBACA,uBAAGA,UAAU,QAAb,8VACA,wBAAIA,UAAU,QACZ,4BAAI,uBAAGA,UAAU,4BAA4BE,KAAK,uCAA9C,sDACJ,4BAAI,uBAAGF,UAAU,4BAA4BE,KAAK,iDAA9C,oBACJ,4BAAI,uBAAGF,UAAU,4BAA4BE,KAAK,8DAA9C,mBACJ,4BAAI,uBAAGF,UAAU,4BAA4BE,KAAK,sDAA9C,+BACJ,4BAAI,uBAAGF,UAAU,4BAA4BE,KAAK,yCAA9C,yC,oCCbd,qCA2DeoC,IAxDI,SAAC,GAAmD,EAAlDrE,OAAkD,EAA1CC,UAA0C,EAA/BC,MAAgC,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAElDC,EAAOC,yBAAe,aAetBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpDC,EAAO,GAwBX,OAvBYH,EAAKiE,kBAAkB5D,MAE7BC,SAAQ,SAASC,EAAOC,GAC5B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMV,MAAQW,GAC5E,uBAAGkB,UAAU,iDAAiDE,KAAMrB,EAAMsB,MAAOtB,EAAMV,OACvF,uBAAG6B,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACA,wBAAIW,WAAYvB,EAAK2B,OAAS,EAAI,GAAK,UAAW,2CAC/C3B,GAEH,uBAAGuB,WAAYvB,EAAK2B,OAAS,EAAI,SAAW,IAAM,oBAAlD","file":"component---src-pages-yesterday-js-3d92e0f3c3fb709d79e1.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Admin = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedAdmin {\r\n      nodes {\r\n        content\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedAdmin.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No administrative proceeding has been published today.\r\n    </p>\r\n  </>\r\n    )\r\n}\r\nexport default Admin","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Speeches = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedSpeeches {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedSpeeches.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No speech has been published today.\r\n    </p>\r\n    </>\r\n  )\r\n}\r\nexport default Speeches","import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"bg-navy text-center px-12 relative\">\r\n      <div className=\"absolute top-2 left-2 768px:left-1/4 bg-white-10 h-0.5 right-2 768px:right-1/4 w-100 z-0\"></div>\r\n      <div className=\"absolute top-3 left-2 768px:left-1/4 ml-1 bg-white-10 h-0.5 right-2 768px:right-1/4 mr-1 w-100 z-0\"></div>\r\n      <div className=\"absolute top-4 left-2 768px:left-1/4 ml-2 bg-white-10 h-0.5 right-2 768px:right-1/4 mr-2 w-100 z-0\"></div>\r\n      <span className=\"relative inline-block bg-navy py-1 px-2 text-sm uppercase text-white-50 font-serif z-1\">Secretary of the Secretary</span>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\"\nimport Litigation from \"../components/sec/Litigation\"\nimport News from \"../components/sec/News\"\nimport Speeches from \"../components/sec/Speeches\"\nimport Testimony from \"../components/sec/Testimony\"\nimport Statements from \"../components/sec/Statements\"\nimport Admin from \"../components/sec/Admin\"\nimport TradingSuspensions from \"../components/sec/TradingSuspensions\"\nimport Footer from \"../components/sec/Footer\"\nimport ProposedRules from \"../components/sec/ProposedRules\"\nimport Header from \"../components/sec/Header\"\n\nconst Yesterday = () => {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\nvar MOD = 1;\nvar today = new Date();\nvar start = new Date(today);\nstart.setDate(start.getDate() - MOD);\nvar startDate = months[start.getMonth()] + \" \" + (start.getDate()) + \", \" + start.getFullYear();\nvar end = new Date(today);\nend.setDate(end.getDate() - MOD);\nvar endDate = months[end.getMonth()] + \" \" + end.getDate() + \", \" + end.getFullYear();\n\nreturn (\n  <>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"1\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Playfair+Display&display=swap\"\n      rel=\"stylesheet\"\n    />\n\n    <Header/>\n    <div className=\"my-12 mx-auto max-w-2xl w-3/4 font-serif\">\n    <main>\n      <h1 className=\"text-3xl text-navy text-center\">Yesterday at the SEC</h1>\n      <h2 className=\"mb-8 text-lg text-center\"> \n        {startDate === endDate ? startDate : (startDate + \" - \" + endDate)}\n        <a className=\"text-navy-50 inline-block relative top-1 left-2\" href=\"/sec\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </a>\n      </h2>\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">News</h2>\n        <News startDate={start} endDate={end} /> \n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/news\">Past News</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Speeches</h2>\n        <Speeches startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/speeches\">Past Speeches</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Testimony</h2>\n        <Testimony startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/testimony\">Past Testimony</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Public Statements</h2>\n        <Statements startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/statements\">Past Statements</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Litigation</h2>\n        <Litigation startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/litigation\">Past Litigation</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Administrative Proceedings</h2>\n        <Admin startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/admin\">Past Proceedings</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Trading Suspensions</h2>\n        <TradingSuspensions startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/tradingSuspensions\">Past Suspensions</a>\n        </div>     \n      </section>\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Proposed Rules</h2>\n        <ProposedRules startDate={start} endDate={end} />\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/proposedRules\">Past Proposals</a>\n        </div>     \n      </section>\n      \n        {/* \n\n        <div className=\"opacity-50 mt-12\">\n        <h2>Other Commission Orders, Notices, and Information</h2>\n        No Feed... request page and scrape data:\n        grab the table#mainlist and iterate manually\n        https://www.sec.gov/rules/other.htm\n        \n        <h2 className=\"text-lg border-b-2\">FOIA Program</h2>\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Decisions</h2>\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Orders</h2>\n        <h2 className=\"text-lg border-b-2\">Divisions</h2>\n        <h2 className=\"text-lg border-b-2\">Regulatory Actions</h2>\n        </div> */}\n\n      </main>\n      <Footer />\n      </div>\n    </>\n  )\n}\nexport default Yesterday\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst News = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedNews {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  let feed = [];\r\n  let nodes = data.allFeedNews.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No news has been published today.\r\n    </p>\r\n  </>\r\n  )\r\n}\r\nexport default News","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Testimony = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedTestimony {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedTestimony.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n      <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No testimony has been published today.\r\n      </p>\r\n    </>\r\n  )\r\n}\r\nexport default Testimony","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Litigation = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedLitigation {\r\n      nodes {\r\n        content\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedLitigation.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No litigation has been published today.\r\n    </p>\r\n  </>\r\n    )\r\n}\r\nexport default Litigation","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst TradingSuspensions = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedTradingSuspensions {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedTradingSuspensions.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No suspension has been published today.\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default TradingSuspensions","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst ProposedRules = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedProposedRules {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedProposedRules.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No proposed rule has been published today.\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default ProposedRules","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n   \r\n    <div className=\"mt-12 pt-12 opacity-25 text-sm text-center border-t border-black-25\">\r\n        <h3 className=\"text-lg pb-2 font-bold\">Fineprint / Legalese</h3>\r\n        <p className=\"mb-4\">This page provides a daily list of the most recent materials posted to the SEC website. The official release date of a document may differ from the posting date so always verify the source documents. Some legacy sections do not have data feeds, the SEC has been notified and we hope they will provide a feed in the future. Those sections include:</p>\r\n        <ul className=\"pl-8\">\r\n          <li><a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/rules/other.htm\">Other Commission Orders, Notices, and Information</a></li>\r\n          <li><a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/about/upcoming-events.htm\">Upcoming Events</a></li>\r\n          <li><a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent\">Latest Filings</a></li>\r\n          <li><a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/news/whatsnew/wn-archive.shtml\">Previous What’s New Issues</a></li>\r\n          <li><a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/news/digest.shtml\">News Digest Archives (1956-2013)</a></li>\r\n        </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Statements = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedStatements {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedStatements.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No statement has been published today.\r\n    </p>\r\n    </>\r\n    )\r\n}\r\nexport default Statements"],"sourceRoot":""}