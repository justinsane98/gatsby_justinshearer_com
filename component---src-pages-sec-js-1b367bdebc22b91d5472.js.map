{"version":3,"sources":["webpack:///./src/components/sec/news.js","webpack:///./src/components/sec/litigation.js","webpack:///./src/components/sec/speeches.js","webpack:///./src/components/sec/testimony.js","webpack:///./src/components/sec/statements.js","webpack:///./src/components/sec/admin.js","webpack:///./src/components/sec/tradingSuspensions.js","webpack:///./src/pages/sec.js"],"names":["News","startDate","endDate","data","useStaticQuery","months","feed","allFeedNews","nodes","forEach","entry","i","entryDay","pubDate","split","entryMonth","entryYear","entryTime","entryMinute","entryHour","content","replaceAll","entryDate","Date","findIndex","element","includes","setHours","push","className","key","title","href","link","Litigation","rssUrl","sourceUrl","allFeedLitigation","length","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Speeches","allFeedSpeeches","Testimony","allFeedTestimony","Statements","allFeedStatements","Admin","allFeedAdmin","Trading","allFeedTradingSuspensions","Sec","today","start","setDate","getDate","getMonth","getFullYear","end","rel","crossOrigin"],"mappings":"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","file":"component---src-pages-sec-js-1b367bdebc22b91d5472.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst News = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedNews {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  let feed = [];\r\n  let nodes = data.allFeedNews.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n    <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n      {feed}\r\n    </ul>\r\n  </>\r\n  )\r\n}\r\nexport default News","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Litigation = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedLitigation {\r\n      nodes {\r\n        content\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedLitigation.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n        <section className={\"mb-12 \" + (feed.length > 0 ? \"block\" : \"hidden\" )}>\r\n          <div className=\"768px:float-right\">\r\n            <a className=\"text-gold leading-loose\" href={rssUrl}>XML</a> | <a className=\"inline-block text-navy\" href={sourceUrl}> <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> More</a>\r\n          </div>\r\n          <h2 className=\"text-2xl border-b border-black-25 pb-2\">{title}</h2>\r\n          <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n            {feed}\r\n          </ul>\r\n        </section>\r\n      </>\r\n    )\r\n}\r\nexport default Litigation","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Speeches = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedSpeeches {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedSpeeches.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n      <section className={\"mb-12 \" + (feed.length > 0 ? \"block\" : \"hidden\" )}>\r\n        <div className=\"768px:float-right\">\r\n          <a className=\"text-gold leading-loose\" href={rssUrl}>XML</a> | <a className=\"inline-block text-navy\" href={sourceUrl}> <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> More</a>\r\n        </div>\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">{title}</h2>\r\n        <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n          {feed}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport default Speeches","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Testimony = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedTestimony {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedTestimony.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n        <section className={\"mb-12 \" + (feed.length > 0 ? \"block\" : \"hidden\" )}>\r\n          <div className=\"768px:float-right\">\r\n            <a className=\"text-gold leading-loose\" href={rssUrl}>XML</a> | <a className=\"inline-block text-navy\" href={sourceUrl}> <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> More</a>\r\n          </div>\r\n          <h2 className=\"text-2xl border-b border-black-25 pb-2\">{title}</h2>\r\n          <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n            {feed}\r\n          </ul>\r\n        </section>\r\n      </>\r\n    )\r\n}\r\nexport default Testimony","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Statements = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedStatements {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedStatements.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n        <section className={\"mb-12 \" + (feed.length > 0 ? \"block\" : \"hidden\" )}>\r\n          <div className=\"768px:float-right\">\r\n            <a className=\"text-gold leading-loose\" href={rssUrl}>XML</a> | <a className=\"inline-block text-navy\" href={sourceUrl}> <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> More</a>\r\n          </div>\r\n          <h2 className=\"text-2xl border-b border-black-25 pb-2\">{title}</h2>\r\n          <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n            {feed}\r\n          </ul>\r\n        </section>\r\n      </>\r\n    )\r\n}\r\nexport default Statements","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Admin = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedAdmin {\r\n      nodes {\r\n        content\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedAdmin.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n        <section className={\"mb-12 \" + (feed.length > 0 ? \"block\" : \"hidden\" )}>\r\n          <div className=\"768px:float-right\">\r\n            <a className=\"text-gold leading-loose\" href={rssUrl}>XML</a> | <a className=\"inline-block text-navy\" href={sourceUrl}> <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> More</a>\r\n          </div>\r\n          <h2 className=\"text-2xl border-b border-black-25 pb-2\">{title}</h2>\r\n          <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n            {feed}\r\n          </ul>\r\n        </section>\r\n      </>\r\n    )\r\n}\r\nexport default Admin","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Trading = ({rssUrl, sourceUrl, title, startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedTradingSuspensions {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedTradingSuspensions.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n        <section className={\"mb-12 \" + (feed.length > 0 ? \"block\" : \"hidden\" )}>\r\n          <div className=\"768px:float-right\">\r\n            <a className=\"text-gold leading-loose\" href={rssUrl}>XML</a> | <a className=\"inline-block text-navy\" href={sourceUrl}> <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> More</a>\r\n          </div>\r\n          <h2 className=\"text-2xl border-b border-black-25 pb-2\">{title}</h2>\r\n          <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n            {feed}\r\n          </ul>\r\n        </section>\r\n      </>\r\n    )\r\n}\r\nexport default Trading","import React from \"react\"\nimport Litigation from \"../components/sec/litigation\"\nimport NewsList from \"../components/sec/news\"\nimport Speeches from \"../components/sec/speeches\"\nimport Testimony from \"../components/sec/testimony\"\nimport Statements from \"../components/sec/statements\"\nimport Admin from \"../components/sec/admin\"\nimport TradingSuspensions from \"../components/sec/tradingSuspensions\"\n\nconst Sec = () => {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nvar today = new Date();\nvar start = new Date(today);\nstart.setDate(start.getDate());\nvar startDate = months[start.getMonth()] + \" \" + (start.getDate()) + \", \" + start.getFullYear();\nvar end = new Date(today);\nend.setDate(end.getDate());\nvar endDate = months[end.getMonth()] + \" \" + end.getDate() + \", \" + end.getFullYear();\n\nreturn (\n  <>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"1\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Playfair+Display&display=swap\"\n      rel=\"stylesheet\"\n    />\n\n    <header className=\"bg-navy text-white-50 font-serif text-center text-sm uppercase py-1 px-12\">\n      Office of the Secretary of the Secretary\n    </header>\n    <div className=\"my-12 mx-auto max-w-2xl w-3/4 font-serif\">\n    <main>\n      <h1 className=\"text-3xl text-navy text-center\">What’s New on the SEC Website</h1>\n      <h2 className=\"mb-4 text-lg text-center\">For {startDate === endDate ? startDate : (startDate + \" - \" + endDate)}</h2>\n      <blockquote className=\"mb-4 text-sm px-6 py-4 border border-navy-light\">The official What’s New page for the SEC will no longer be updated after September 30, 2021. To stay current on the most recent materials posted to the SEC website, the SEC suggests subscribing to the <a className=\"text-navy font-bold hover:underline\" href=\"https://www.sec.gov/about/secrss.shtml\">SEC RSS feeds</a>. <span className=\"font-bold\">Or you can let the Secretary take of that for you.</span></blockquote>\n\n      <p className=\"mb-2\">This page provides a daily list of the most recent materials posted to the SEC website. Note that the official release date of a document may differ from the posting date, in which case, the release date is indicated in parentheses. See also:</p>\n      <ul className=\"mb-12 list-disc pl-8\">\n        <li><a className=\"text-navy font-bold hover:underline\" href=\"https://www.sec.gov/about/upcoming-events.htm\">Upcoming Events</a> for a list of upcoming public events including meetings, public appearances, and hearings.</li>\n        <li><a className=\"text-navy font-bold hover:underline\" href=\"https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent\">Latest Filings</a> for the most recent company filings.</li>\n        <li><a className=\"text-navy font-bold hover:underline\" href=\"https://www.sec.gov/news/whatsnew/wn-archive.shtml\">Previous What’s New Issues</a></li>\n        <li><a className=\"text-navy font-bold hover:underline\" href=\"https://www.sec.gov/news/digest.shtml\">News Digest Archives (1956-2013)</a></li>\n      </ul>\n\n\n      <section className=\"mb-12 relative\">\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">News</h2>\n        <NewsList startDate={start} endDate={end} /> \n        <div className=\"425px:absolute top-2 right-0 text-navy\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/news\">More</a>\n        </div>     \n      </section>\n\n      <Speeches startDate={start} endDate={end} title=\"Speeches\" rssUrl=\"https://www.sec.gov/rss/news/speech.xml\" sourceUrl=\"https://www.sec.gov/news/speeches\" />\n      <Testimony startDate={start} endDate={end} title=\"Testimony\" rssUrl=\"https://www.sec.gov/news/testimony.rss\" sourceUrl=\"https://www.sec.gov/news/testimony\" />\n      <Statements startDate={start} endDate={end} title=\"Statements\" rssUrl=\"https://www.sec.gov/news/statements.rss\" sourceUrl=\"https://www.sec.gov/news/statements\" />\n      <Litigation startDate={start} endDate={end} title=\"Litigation\" rssUrl=\"https://www.sec.gov/rss/news/press.xml\" sourceUrl=\"https://www.sec.gov/news/pressreleases\" />\n      <Admin startDate={start} endDate={end} title=\"Administrative Proceedings\" rssUrl=\"https://www.sec.gov/rss/litigation/admin.xml\" sourceUrl=\"https://www.sec.gov/litigation/admin.htm\" />\n      <TradingSuspensions startDate={start} endDate={end} title=\"Trading Suspensions\" rssUrl=\"https://www.sec.gov/rss/litigation/suspensions.xml\" sourceUrl=\"https://www.sec.gov/litigation/suspensions.htm\" />\n\n\n\n        {/* \n\n        <div className=\"opacity-50 mt-12\">\n        <h2>Other Commission Orders, Notices, and Information</h2>\n        No Feed... request page and scrape data:\n        grab the table#mainlist and iterate manually\n        https://www.sec.gov/rules/other.htm\n        \n        <h2 className=\"text-lg border-b-2\">FOIA Program</h2>\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Decisions</h2>\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Orders</h2>\n        <h2 className=\"text-lg border-b-2\">Divisions</h2>\n        <h2 className=\"text-lg border-b-2\">Regulatory Actions</h2>\n        </div> */}\n      </main>\n      </div>\n    </>\n  )\n}\nexport default Sec"],"sourceRoot":""}