{"version":3,"sources":["webpack:///./src/components/sec/news.js","webpack:///./src/pages/news.js"],"names":["News","startDate","endDate","data","useStaticQuery","months","feed","allFeedNews","nodes","forEach","entry","i","entryDay","pubDate","split","entryMonth","entryYear","entryTime","entryMinute","entryHour","content","replaceAll","entryDate","Date","findIndex","element","includes","setHours","push","className","key","title","href","link","today","start","setDate","getDate","getMonth","getFullYear","end","rel","crossOrigin","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"mappings":"8FAAA,qCAuDeA,IApDF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAElBC,EAAOC,yBAAe,cAetBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDC,EAAO,GAwBb,OAvBcH,EAAKI,YAAYC,MAEvBC,SAAQ,SAASC,EAAOC,GAC9B,IAAIC,EAAWF,EAAMG,QAAQC,MAAM,KAAK,GACpCC,EAAaL,EAAMG,QAAQC,MAAM,KAAK,GACtCE,EAAYN,EAAMG,QAAQC,MAAM,KAAK,GACrCG,EAAYP,EAAMG,QAAQC,MAAM,KAAK,GACrCI,EAAcD,EAAUH,MAAM,KAAK,GACnCK,EAAYF,EAAUH,MAAM,KAAK,GACjCM,EAAUV,EAAMU,QAAUV,EAAMU,QAAQC,WAAW,SAAU,KAAO,GACpEC,EAAY,IAAIC,KAAKP,EAAWX,EAAOmB,WAAU,SAAAC,GAAO,OAAIA,EAAQC,SAASX,MAAcH,GAE5FU,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAM1B,EAAU0B,SAAS,EAAE,EAAE,EAAE,IAAML,EAAUK,SAAS,EAAE,EAAE,EAAE,IAAMzB,EAAQyB,SAAS,EAAE,EAAE,EAAE,IACrHrB,EAAKsB,KACH,wBAAIC,UAAU,6CAA6CC,IAAKpB,EAAMqB,MAAQpB,GAC5E,uBAAGkB,UAAU,iDAAiDG,KAAMtB,EAAMuB,MAAOvB,EAAMqB,OACvF,uBAAGF,UAAU,cAAcT,GAC3B,uBAAGS,UAAU,sBAAsBd,EAAnC,IAAgDH,EAAhD,IAA2DO,EAA3D,IAAuED,EAAvE,aAON,oCACE,wBAAIW,UAAU,0CACXvB,M,kCClDP,4CAmDeN,UAhDF,WACX,IAAMK,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGpD6B,EAAQ,IAAIX,KACZY,EAAQ,IAAIZ,KAAKW,GACrBC,EAAMC,QAAQD,EAAME,UAAU,OACPF,EAAMG,WAAqBH,EAAME,UAAoBF,EAAMI,cAAlF,IACIC,EAAM,IAAIjB,KAAKW,GACnBM,EAAIJ,QAAQI,EAAIH,WACKG,EAAIF,WAAoBE,EAAIH,UAAmBG,EAAID,cAExE,OACE,oCACE,0BAAME,IAAI,aAAaT,KAAK,iCAC5B,0BAAMS,IAAI,aAAaT,KAAK,4BAA4BU,YAAY,MACpE,0BACEV,KAAK,8FACLS,IAAI,eAGN,4BAAQZ,UAAU,gBAChB,yBAAKA,UAAU,mCACb,uBAAGA,UAAU,sCAAsCG,KAAK,QACxD,yBAAKW,MAAM,6BAA6Bd,UAAU,UAAUe,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACjG,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sBAGvE,wBAAIrB,UAAU,0DAAd,8CAKJ,yBAAKA,UAAU,4CACb,8BACE,6BAASA,UAAU,kBACjB,wBAAIA,UAAU,0CAAd,QACA,kBAAC,IAAD,CAAU5B,UAAWkC,EAAOjC,QAASsC,IACrC,yBAAKX,UAAU,gCACb,uBAAGA,UAAU,0CAA0CG,KAAK,0CAA5D,OADF,MACiH,uBAAGH,UAAU,yCAAyCG,KAAK,0CAA3D","file":"component---src-pages-news-js-afcd9f61f07b2cf9aa9c.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst News = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedNews {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  let feed = [];\r\n  let nodes = data.allFeedNews.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n    <ul className=\"768px:flex 768px:flex-wrap 768px:-mx-8\">\r\n      {feed}\r\n    </ul>\r\n  </>\r\n  )\r\n}\r\nexport default News","import React from \"react\"\nimport NewsList from \"../components/sec/news\"\n\nconst News = () => {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nvar today = new Date();\nvar start = new Date(today);\nstart.setDate(start.getDate()-99999);\nvar startDate = months[start.getMonth()] + \" \" + (start.getDate()) + \", \" + start.getFullYear();\nvar end = new Date(today);\nend.setDate(end.getDate());\nvar endDate = months[end.getMonth()] + \" \" + end.getDate() + \", \" + end.getFullYear();\n\nreturn (\n  <>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"1\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Playfair+Display&display=swap\"\n      rel=\"stylesheet\"\n    />\n\n    <header className=\"bg-navy py-1\">\n      <div className=\"relative px-4 mx-auto max-w-2xl\">\n        <a className=\"absolute top-0 left-0 text-white-50\" href=\"/sec\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n        </svg>\n      </a>\n        <h3 className=\"text-white-50 font-serif text-center text-sm uppercase\">Office of the Secretary of the Secretary</h3>\n      </div>\n      \n\n    </header>\n    <div className=\"my-12 mx-auto max-w-2xl w-3/4 font-serif\">\n      <main>\n        <section className=\"mb-12 relative\">\n          <h2 className=\"text-2xl border-b border-black-25 pb-2\">News</h2>\n          <NewsList startDate={start} endDate={end} />\n          <div className=\"425px:absolute top-2 right-0\">\n            <a className=\"text-gold leading-loose hover:underline\" href=\"https://www.sec.gov/rss/news/press.xml\">XML</a> | <a className=\"inline-block text-navy hover:underline\" href=\"https://www.sec.gov/news/pressreleases\">Source</a>\n          </div>    \n        </section>\n      </main>\n    </div>\n    </>\n  )\n}\nexport default News"],"sourceRoot":""}