{"version":3,"sources":["webpack:///./src/components/sec/Admin.js","webpack:///./src/components/sec/Speeches.js","webpack:///./src/components/sec/Header.js","webpack:///./src/components/sec/Feeds.js","webpack:///./src/components/sec/News.js","webpack:///./src/components/sec/InvestmentManagement.js","webpack:///./src/components/sec/Testimony.js","webpack:///./src/components/sec/InvestorAlerts.js","webpack:///./src/components/sec/Litigation.js","webpack:///./src/components/sec/TradingSuspensions.js","webpack:///./src/components/sec/ProposedRules.js","webpack:///./src/components/sec/Footer.js","webpack:///./src/components/sec/CorporateFinance.js","webpack:///./src/components/sec/Statements.js"],"names":["Admin","startDate","endDate","message","data","useStaticQuery","months","feed","allFeedAdmin","nodes","forEach","entry","i","entryDay","pubDate","split","entryMonth","entryYear","entryTime","entryMinute","entryHour","content","replaceAll","entryDate","Date","findIndex","element","includes","setHours","push","className","key","title","href","link","length","Speeches","allFeedSpeeches","Header","props","Feeds","start","end","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","News","allFeedNews","InvestmentManagement","allFeedInvestmentManagement","Testimony","allFeedTestimony","InvestorAlerts","allFeedInvestorAlerts","Litigation","allFeedLitigation","TradingSuspensions","allFeedTradingSuspensions","ProposedRules","allFeedProposedRules","Footer","CorporateFinance","allFeedCorporateFinance","Statements","allFeedStatements"],"mappings":"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","file":"b1c87e065079b66af6fc06d975a57ed8a38a369b-845694e59b980cbf27fb.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Admin = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedAdmin {\r\n      nodes {\r\n        content\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedAdmin.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No administrative proceeding {message}.\r\n    </p>\r\n  </>\r\n    )\r\n}\r\nexport default Admin","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Speeches = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedSpeeches {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedSpeeches.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No speech {message}.\r\n    </p>\r\n    </>\r\n  )\r\n}\r\nexport default Speeches","import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"bg-navy text-center px-12 relative\">\r\n      <div className=\"absolute top-2 left-2 768px:left-1/4 bg-white-10 h-0.5 right-2 768px:right-1/4 w-100 z-0\"></div>\r\n      <div className=\"absolute top-3 left-2 768px:left-1/4 ml-1 bg-white-10 h-0.5 right-2 768px:right-1/4 mr-1 w-100 z-0\"></div>\r\n      <div className=\"absolute top-4 left-2 768px:left-1/4 ml-2 bg-white-10 h-0.5 right-2 768px:right-1/4 mr-2 w-100 z-0\"></div>\r\n      <a href=\"/sec\" className=\"relative inline-block bg-navy py-1 px-2 text-sm uppercase text-white-50 font-serif z-1\">Secretary of the Secretary</a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\"\r\nimport Litigation from \"./Litigation\"\r\nimport News from \"./News\"\r\nimport Speeches from \"./Speeches\"\r\nimport Testimony from \"./Testimony\"\r\nimport Statements from \"./Statements\"\r\nimport Admin from \"./Admin\"\r\nimport TradingSuspensions from \"./TradingSuspensions\"\r\nimport ProposedRules from \"./ProposedRules\"\r\nimport CorporateFinance from \"./CorporateFinance\"\r\nimport InvestmentManagement from \"./InvestmentManagement\"\r\nimport InvestorAlerts from \"./InvestorAlerts\"\r\n\r\nconst Feeds = ({start, end, message}) => {\r\nreturn (\r\n  <>\r\n  <div>\r\n    <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">News</h2>\r\n        <News startDate={start} endDate={end} message={message}/> \r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/news\">Past News</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Speeches</h2>\r\n        <Speeches startDate={start} endDate={end} message={message} />\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/speeches\">Past Speeches</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Testimony</h2>\r\n        <Testimony startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/testimony\">Past Testimony</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Public Statements</h2>\r\n        <Statements startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/statements\">Past Statements</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Litigation</h2>\r\n        <Litigation startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/litigation\">Past Litigation</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Administrative Proceedings</h2>\r\n        <Admin startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/admin\">Past Proceedings</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Trading Suspensions</h2>\r\n        <TradingSuspensions startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/tradingSuspensions\">Past Suspensions</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Proposed Rules</h2>\r\n        <ProposedRules startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/proposedRules\">Past Proposals</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Corporate Finance</h2>\r\n        <CorporateFinance startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/corporateFinance\">Past News</a>\r\n        </div>     \r\n      </section>\r\n      \r\n      \r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Investor Alerts</h2>\r\n        <InvestorAlerts startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/investorAlerts\">Past Alerts</a>\r\n        </div>     \r\n      </section>\r\n\r\n      <section className=\"mb-12 relative\">\r\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Investment Management</h2>\r\n        <InvestmentManagement startDate={start} endDate={end} message={message}/>\r\n        <div className=\"425px:absolute top-2 right-0 text-navy\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/investmentManagement\">Past News</a>\r\n        </div>     \r\n      </section>\r\n\r\n      \r\n        {/* \r\n\r\n        <div className=\"opacity-50 mt-12\">\r\n        <h2>Other Commission Orders, Notices, and Information</h2>\r\n        No Feed... request page and scrape data:\r\n        grab the table#mainlist and iterate manually\r\n        https://www.sec.gov/rules/other.htm\r\n        \r\n        <h2 className=\"text-lg border-b-2\">FOIA Program</h2>\r\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Decisions</h2>\r\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Orders</h2>\r\n        <h2 className=\"text-lg border-b-2\">Divisions</h2>\r\n        <h2 className=\"text-lg border-b-2\">Regulatory Actions</h2>\r\n        </div> */}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\nexport default Feeds\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst News = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedNews {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  let feed = [];\r\n  let nodes = data.allFeedNews.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n  let entryDay = entry.pubDate.split(\" \")[1]\r\n  let entryMonth = entry.pubDate.split(\" \")[2]\r\n  let entryYear = entry.pubDate.split(\" \")[3]\r\n  var entryTime = entry.pubDate.split(\" \")[4]\r\n  var entryMinute = entryTime.split(\":\")[1]\r\n  var entryHour = entryTime.split(\":\")[0]\r\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n\r\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n    feed.push (\r\n      <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n        <p className=\"opacity-90\">{content}</p>\r\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n      </li>\r\n    );\r\n  }\r\n})\r\n\r\nreturn (\r\n  <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No news {message}.\r\n    </p>\r\n  </>\r\n  )\r\n}\r\nexport default News","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst InvestmentManagement = ({startDate, endDate}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedInvestmentManagement {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n        content\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedInvestmentManagement.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        The feed has not been updated since 2019. However, there is current news available:  <br/><a className=\"text-large text-navy font-bold hover:underline\" href=\"https://www.sec.gov/investment-management/whats-new\">https://www.sec.gov/investment-management/whats-new</a>\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default InvestmentManagement","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Testimony = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedTestimony {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedTestimony.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n      <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No testimony {message}.\r\n      </p>\r\n    </>\r\n  )\r\n}\r\nexport default Testimony","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst InvestorAlerts = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedInvestorAlerts {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n        content\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedInvestorAlerts.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No alert {message}.\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default InvestorAlerts","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Litigation = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedLitigation {\r\n      nodes {\r\n        content\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedLitigation.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No litigation {message}.\r\n    </p>\r\n  </>\r\n    )\r\n}\r\nexport default Litigation","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst TradingSuspensions = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedTradingSuspensions {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedTradingSuspensions.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No suspension {message}.\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default TradingSuspensions","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst ProposedRules = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedProposedRules {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedProposedRules.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No proposed rule {message}.\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default ProposedRules","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n   <div></div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst CorporateFinance = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedCorporateFinance {\r\n      nodes {\r\n        title\r\n        pubDate\r\n        link\r\n        content\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedCorporateFinance.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n        {feed}\r\n      </ul>\r\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n        No news {message}.\r\n      </p>\r\n      </>\r\n    )\r\n}\r\nexport default CorporateFinance","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Statements = ({startDate, endDate, message}) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allFeedStatements {\r\n      nodes {\r\n        content\r\n        guid\r\n        pubDate\r\n        title\r\n        link\r\n      }\r\n    }\r\n  \r\n  }\r\n`)\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  let feed = [];\r\n  let nodes = data.allFeedStatements.nodes;\r\n\r\n  nodes.forEach(function(entry, i) {\r\n    let entryDay = entry.pubDate.split(\" \")[1]\r\n    let entryMonth = entry.pubDate.split(\" \")[2]\r\n    let entryYear = entry.pubDate.split(\" \")[3]\r\n    var entryTime = entry.pubDate.split(\" \")[4]\r\n    var entryMinute = entryTime.split(\":\")[1]\r\n    var entryHour = entryTime.split(\":\")[0]\r\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\r\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\r\n  \r\n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \r\n      feed.push (\r\n        <li className=\"768px:flex-col 768px:w-1/2 768px:px-8 py-4\" key={entry.title + i}>\r\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\r\n          <p className=\"opacity-90\">{content}</p>\r\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\r\n        </li>\r\n      );\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\") +\" 768px:flex 768px:flex-wrap 768px:-mx-8\"}>\r\n      {feed}\r\n    </ul>\r\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\r\n      No statement {message}.\r\n    </p>\r\n    </>\r\n    )\r\n}\r\nexport default Statements"],"sourceRoot":""}